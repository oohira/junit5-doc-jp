apply plugin: 'com.github.johnrengelman.shadow'
apply from: "$rootDir/gradle/testing.gradle"

description = 'JUnit Jupiter Params'

afterEvaluate {
	// Use classes modified by shadow plugin for test execution so JaCoCo
	// finds same class files when creating its report
	test.classpath -= sourceSets.main.output
	test.classpath += files(shadowJar.archivePath)
	test.dependsOn(shadowJar)
}

dependencies {
	api(project(':junit-jupiter-api'))

	shadowed('com.univocity:univocity-parsers:2.7.2')

	testImplementation(project(path: ':junit-platform-engine', configuration: 'testArtifacts'))
	testImplementation(project(':junit-jupiter-engine'))
	testImplementation(project(':junit-platform-launcher'))
	testImplementation(project(':junit-platform-runner'))

	compileOnly('org.jetbrains.kotlin:kotlin-stdlib')
	testImplementation('org.jetbrains.kotlin:kotlin-stdlib')
}

jar.enabled = false
jar.dependsOn shadowJar

jar {
	manifest {
		attributes(
			'Automatic-Module-Name': 'org.junit.jupiter.params'
		)
	}
}

shadowJar {
	// Generate shadow jar only if the underlying manifest was regenerated.
	// See https://github.com/junit-team/junit5/issues/631
	onlyIf {
		(project.generateManifest || !shadowJar.archivePath.exists())
	}
	classifier = null
	configurations = [project.configurations.shadowed]
	exclude 'META-INF/maven/**'
	relocate 'com.univocity', 'org.junit.jupiter.params.shadow.com.univocity'
	from(projectDir) {
		include 'LICENSE-univocity-parsers.md'
		into 'META-INF'
	}
}
