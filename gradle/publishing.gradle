apply plugin: 'maven-publish'
apply plugin: 'signing'

def isSnapshot = project.version.contains('SNAPSHOT')

// ensure project is built successfully before publishing it
publish.dependsOn(build)
publishToMavenLocal.dependsOn(build)

signing {
	sign publishing.publications
	required {
		def isContinuousIntegrationEnvironment = Boolean.parseBoolean(System.getenv('CI'))
		def isJitPackEnvironment = Boolean.parseBoolean(System.getenv('JITPACK'))
		return !(isSnapshot || isContinuousIntegrationEnvironment || isJitPackEnvironment)
	}
}

publishing {
	publications {
		maven(MavenPublication) {
			pom {
				afterEvaluate {
					name = project.description ?: "${project.group}:${project.name}" as String
				}
				url = 'http://junit.org/junit5/'
				scm {
					connection = 'scm:git:git://github.com/junit-team/junit5.git'
					developerConnection = 'scm:git:git://github.com/junit-team/junit5.git'
					url = 'https://github.com/junit-team/junit5'
				}
				licenses {
					license {
						name = licenseOf(project)['name']
						url = licenseOf(project)['url']
					}
				}
				developers {
					developer {
						id = 'bechte'
						name = 'Stefan Bechtold'
						email = 'stefan.bechtold@me.com'
					}
					developer {
						id = 'jlink'
						name = 'Johannes Link'
						email = 'business@johanneslink.net'
					}
					developer {
						id = 'marcphilipp'
						name = 'Marc Philipp'
						email = 'mail@marcphilipp.de'
					}
					developer {
						id = 'mmerdes'
						name = 'Matthias Merdes'
						email = 'Matthias.Merdes@heidelberg-mobil.com'
					}
					developer {
						id = 'sbrannen'
						name = 'Sam Brannen'
						email = 'sam@sambrannen.com'
					}
					developer {
						id = 'sormuras'
						name = 'Christian Stein'
						email = 'sormuras@gmail.com'
					}
				}
			}
		}
	}
	repositories {
		maven {
			def stagingRepoUrl = 'https://oss.sonatype.org/service/local/staging/deploy/maven2/'
			def snapshotRepoUrl = 'https://oss.sonatype.org/content/repositories/snapshots/'
			url isSnapshot ? snapshotRepoUrl : stagingRepoUrl
			credentials {
				username = rootProject.findProperty('ossrhUsername') ?: ''
				password = rootProject.findProperty('ossrhPassword') ?: ''
			}
		}
	}
}
